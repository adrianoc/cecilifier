@page
@model CecilifierApplication
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@functions
{
}

@{
    ViewData["Title"] = "Cecilifier";
    var fromGist = Model.FromGist;
}

<div id="myNav" class="overlay">
  <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
  <div class="overlay-content">
  <span id="release_notes" />
  </div>
</div>

<br/>
<div>
    
    <div class="form-group" data-tooltip="Type any valid C# code to generate the equivalent Cecil api calls. " data-tooltip-location="right">
        <label class="control-label">Enter your C# code</label>
        <textarea id="_csharpcode"></textarea>
    </div>

    <div align="center">
        <button type="submit" id="sendbutton" class="button" data-tooltip="After entering the code you want to process, press this button." data-tooltip-location="left">Cecilify your code!</button>
        <button type="submit" id="downloadProject" class="button" data-tooltip="Use this option if you want to download a .Net Core 3.0 project, ready for you to play with!" data-tooltip-location="right">Generate Project <i class="fa fa-box"></i></button>
    </div>
        
    <div class="form-group" data-tooltip="After pressing <Cecilify> button, the generate code will be show here." data-tooltip-location="right">
        <label class="control-label">Cecilified Code</label>
        <textarea id="_cecilifiedcode"></textarea>

        <div style="font-family:Lucida Console; font-size: 2">Editor powered by <a href="https://github.com/codemirror/codemirror">CodeMirror</a></div>
    </div>
    <a href="javascript:void(0)" id="dlbtn" style="display: none"><button></button></a>
</div>

<script>
    initializeSite();
    
    var hasError = @((Model.ErrorAccessingGist != null).ToString().ToLower());
    if (hasError) {
        setError("@Model.ErrorAccessingGist");
    }
    else {
        var fromGist = "@fromGist";
        csharpCode.setValue(
            fromGist
                .replace(/&quot;/g, '"')
                .replace(/&gt;/g, '>')
                .replace(/&lt;/g, '<')
                .replace(/&#x27;/g, "'")
                .replace(/&#x2B;/g, '+')
                .replace(/&#x38;/g, '&')
        );
    }
</script>