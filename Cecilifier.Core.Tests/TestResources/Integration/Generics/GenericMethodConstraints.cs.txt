using System;

class GenericMethodConstraints
{
    void A<T1>()   where T1  : class  {}
    void B<T2>()   where T2  : struct {}    
    void C<T3>()   where T3  : Enum {}
    void D<T4>()   where T4  : notnull {}
    void E<T5>()   where T5  : unmanaged {}
    void F<T6>()   where T6  : new() {}
    void G<S,T7>() where T7  : S {}
    void H<T8>()   where T8  : struct, IDisposable  {} // Multiple constraints
    void I<T9>()   where T9  : IDisposable  {}
    void J<T10>()  where T10 : IEquatable<T10> {}
    void K<T11>()  where T11 : IEquatable<int> {}
}