using System;

class Base
{
	internal Base(string s) {}
}

class CtorWithParameters : Base
{
	public CtorWithParameters(uint ui) : base(ui.ToString())
	{
	}

	public CtorWithParameters(string s) : base(s)
	{
	}

	public CtorWithParameters() : base(42.ToString())
	{
	}

	public CtorWithParameters(int n) : this(Process(n) + "foo")
	{
	}

	public CtorWithParameters(object o) : this(o.ToString())
	{
	}

	public CtorWithParameters(float notUsed) : this("literal")
	{
	}

	public CtorWithParameters(double notUsed) : this(new Base("42"))
	{
	}

	public CtorWithParameters(bool notUsed) : this(new Base("bar").ToString())
	{
	}

	/*
	public CtorWithParameters(int n1, int n2) : this( Process(n1, n2) )
	{
	}

	public CtorWithParameters(int n1, string n2) : this( NewInstance(n1) )
	{
	}

	private static CtorWithParameters NewInstance(int n)
	{
		return new CtorWithParameters(n);
	}
	*/

	private static string Process(double n)
	{
		n = n + n / 2.0;
		return n.ToString();
	}

	private static string Process(int n, int j) 
	{
		new CtorWithParameters(10).Sum(1, 2);
		return (n + j).ToString();
	}

	private int Sum(int i, int j)
	{
		return i + j;
	}
}